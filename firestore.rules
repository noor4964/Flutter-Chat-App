rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // ✅ Chats Collection (Only members can access)
    match /chats/{chatId} {
      allow read, write, delete: if isAuthenticated() && request.auth.uid in resource.data.userIds;
      
      // Allow access to typing status subcollection
      match /typing/{docId} {
        allow read, write: if isAuthenticated() && 
          (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds);
      }
    }

    // ✅ Posts Collection (Public read, authenticated create, owner update/delete)
    match /posts/{postId} {
      // Allow anyone who is authenticated to read all posts
      allow read: if isAuthenticated();
      
      // Allow creation of posts if authenticated and the userId field matches the auth ID
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow update/delete only for the post owner
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Comments subcollection - allow read for all authenticated users, create if authenticated
      match /comments/{commentId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      }
    }
    
    // ✅ Users Collection (Public profiles, private data protection)
    match /users/{userId} {
      // Allow users to read any profile
      allow read: if isAuthenticated();
      
      // Allow users to update only their own profile
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
